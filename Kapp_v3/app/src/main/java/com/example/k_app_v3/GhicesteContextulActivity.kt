package com.example.k_app_v3

import android.os.Bundle
import android.widget.Button
import android.widget.TextView
import androidx.activity.enableEdgeToEdge
import androidx.appcompat.app.AppCompatActivity
import androidx.core.view.ViewCompat
import androidx.core.view.WindowInsetsCompat

class GhicesteContextulActivity : AppCompatActivity() {

    // List캒 cu 칥ntreb캒ri 탳i categorii
    private val questions = listOf(
        Pair(listOf("Baloane", "Tort", "Cadouri"), "Petrecere"),
        Pair(listOf("Caiet", "Pix", "Manual"), "탲coal캒"),
        Pair(listOf("Minge", "Rachet캒", "Plas캒"), "Sport"),
        Pair(listOf("Pepene", "C캒p탳uni", "Banane"), "Fructe"),
        Pair(listOf("Pat", "Perna", "Plapum캒"), "Dormitor"),
        Pair(listOf("Tren", "Autobuz", "Avion"), "Transport"),
        Pair(listOf("Pisic캒", "C칙ine", "Papagal"), "Animale"),
        Pair(listOf("Plaj캒", "Mare", "Valuri"), "Vacan탵캒"),
        Pair(listOf("Trandafir", "Lalea", "Crin"), "Flori"),
        Pair(listOf("Frigider", "Aragaz", "Cuptor"), "Buc캒t캒rie"),
        Pair(listOf("Salat캒", "Ciorb캒", "Friptur캒"), "M칙ncare"),
        Pair(listOf("Bec", "Lantern캒", "Lum칙nare"), "Lumin캒"),
        Pair(listOf("Tricou", "Pantaloni", "탲osete"), "칉mbr캒c캒minte"),
        Pair(listOf("Ro탳ii", "Castrave탵i", "Ceap캒"), "Legume"),
        Pair(listOf("Bloc", "Cas캒", "Apartament"), "Locuin탵캒"),
        Pair(listOf("P캒dure", "Copac", "Frunz캒"), "Natur캒"),
        Pair(listOf("Stea", "Soare", "Lun캒"), "Cer"),
        Pair(listOf("Ciocolat캒", "Bomboane", "Pr캒jitur캒"), "Desert"),
        Pair(listOf("Role", "Biciclet캒", "Skateboard"), "Juc캒rii"),
        Pair(listOf("Fotbal", "Tenis", "Baschet"), "Sport"),
        Pair(listOf("Cartofi", "Morcovi", "Ceap캒"), "Legume"),
        Pair(listOf("Piersici", "Caise", "Prune"), "Fructe"),
        Pair(listOf("탲ampon", "Gel de du탳", "S캒pun"), "Igien캒"),
        Pair(listOf("Telefon", "Tablet캒", "Imprimant캒"), "Tehnologie"),
        Pair(listOf("Jachet캒", "Geac캒", "Fular"), "칉mbr캒c캒minte"),
        Pair(listOf("Nisip", "Umbrel캒", "탲ezlong"), "Vacan탵캒"),
        Pair(listOf("Tobogan", "Balansoar", "Leag캒n"), "Parc"),
        Pair(listOf("Creion", "Radier캒", "Ascu탵itoare"), "탲coal캒"),
        Pair(listOf("Gazon", "Trandafir", "Gard"), "Gr캒din캒"),
        Pair(listOf("Z캒pad캒", "Fulgi", "Viscol"), "Iarn캒"),
        Pair(listOf("Ap캒", "Suc", "Cafea"), "B캒uturi"),
        Pair(listOf("Ceai", "Lapte", "Ap캒 mineral캒"), "B캒uturi"),
        Pair(listOf("Scaun", "Mas캒", "Canapea"), "Mobilier"),
        Pair(listOf("Bec", "Candelabru", "Lum칙nare"), "Lumin캒"),
        Pair(listOf("Colier", "Inel", "Br캒탵ar캒"), "Bijuterii"),
        Pair(listOf("F칙n", "Grajd", "Lan de gr칙u"), "Ferm캒"),
        Pair(listOf("Cascad캒", "Lac", "Izvor"), "Ap캒"),
        Pair(listOf("Revist캒", "Carte", "Ziar"), "Lectur캒"),
        Pair(listOf("Ecran", "Camer캒 video", "Proiector"), "Cinema"),
        Pair(listOf("Papuc", "Sandale", "Pantofi"), "칉nc캒l탵캒minte"),
        Pair(listOf("Brichet캒", "Chibrituri", "Foc"), "Aprindere"),
        Pair(listOf("Semin탵e", "Nuci", "Migdale"), "Gust캒ri"),
        Pair(listOf("E탳arf캒", "P캒l캒rie", "탲apc캒"), "Accesorii"),
        Pair(listOf("Lantern캒", "Far", "Lamp캒"), "Iluminare"),
        Pair(listOf("Brad", "Pin", "Molid"), "Copaci"),
        Pair(listOf("Vi탳ine", "Cire탳e", "Struguri"), "Fructe"),
        Pair(listOf("Pepene", "Mere", "Pere"), "Fructe"),
        Pair(listOf("Aloe", "Musetel", "Busuioc"), "Plante"),
        Pair(listOf("Ma탳in캒", "Motociclet캒", "Tir"), "Transport"),
        Pair(listOf("Stejar", "Salc칙m", "Tei"), "Copaci"),
        Pair(listOf("Fereastr캒", "U탳캒", "Perete"), "Cas캒"),
        Pair(listOf("R캒탵u탳c캒", "Leb캒d캒", "Pinguin"), "P캒s캒ri"),
        Pair(listOf("Scoic캒", "Melc", "Coral"), "Mare"),
        Pair(listOf("Calculator", "Tablet캒", "Telefon"), "Tehnologie"),
        Pair(listOf("Can캒", "Ceainic", "Pahar"), "Vesel캒"),
        Pair(listOf("Ciorb캒", "Toc캒ni탵캒", "Sup캒"), "M칙ncare"),
        Pair(listOf("Cal", "Pisic캒", "G캒in캒"), "Animale")
    )

    private var correctCategory: String = ""

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        enableEdgeToEdge()
        setContentView(R.layout.activity_ghiceste_contextul)

        val tvWords: TextView = findViewById(R.id.tvWords)
        val btnCategory1: Button = findViewById(R.id.btnCategory1)
        val btnCategory2: Button = findViewById(R.id.btnCategory2)
        val tvResult: TextView = findViewById(R.id.tvResult)

        fun generateQuestion() {
            // Alegem o 칥ntrebare 탳i amestec캒m categoriile pentru afi탳are
            val question = questions.random()
            val shuffledCategories = listOf(question.second, questions.random().second).shuffled()

            // Set캒m textul 칥n interfa탵캒
            tvWords.text = question.first.joinToString(", ")
            btnCategory1.text = shuffledCategories[0]
            btnCategory2.text = shuffledCategories[1]
            correctCategory = question.second
        }

        fun checkAnswer(selectedCategory: String) {
            if (selectedCategory == correctCategory) {
                tvResult.text = "Corect! Categoria este $correctCategory. 游꿀"
                tvResult.setTextColor(getColor(android.R.color.holo_green_dark))
            } else {
                tvResult.text = "Gre탳it! Categoria corect캒 era $correctCategory."
                tvResult.setTextColor(getColor(android.R.color.holo_red_light))
            }

            // Gener캒m o nou캒 칥ntrebare dup캒 2 secunde
            tvResult.postDelayed({
                tvResult.text = ""
                generateQuestion()
            }, 2000)
        }

        // Set캒m ac탵iunile pentru butoane
        btnCategory1.setOnClickListener { checkAnswer(btnCategory1.text.toString()) }
        btnCategory2.setOnClickListener { checkAnswer(btnCategory2.text.toString()) }

        // Gener캒m prima 칥ntrebare
        generateQuestion()
    }
}